# -*- coding: utf-8 -*-
"""Untitled62.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11uuAPHaR-Kr_GLVhEHEDfqb9-L_mgmy_
"""

import pandas as pd

# Load dataset
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"
names = ['sepal-length', 'sepal-width', 'petal-length', 'petal-width', 'class']
dataset = pd.read_csv(url, names=names)



from sklearn.model_selection import train_test_split

# Split dataset into features and labels
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, 4].values

# Split dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import BaggingClassifier

from sklearn.metrics import accuracy_score

# Decision Tree Algorithm
dt = DecisionTreeClassifier(random_state=0)
dt.fit(X_train, y_train)
dt_pred = dt.predict(X_test)
dt_acc = accuracy_score(y_test, dt_pred)

# Bagging
bg = BaggingClassifier(DecisionTreeClassifier(), max_samples=0.5, max_features=1.0, n_estimators=20)
bg.fit(X_train, y_train)
bg_pred = bg.predict(X_test)
bg_acc = accuracy_score(y_test, bg_pred)

print("Decision Tree Algorithm Accuracy:", dt_acc)
print("Bagging Algorithm Accuracy:", bg_acc)

from sklearn.model_selection import GridSearchCV

parameters = {'n_estimators': [10, 20, 30, 40, 50], 'max_samples': [0.1, 0.3, 0.5, 0.7, 0.9], 'max_features': [0.1, 0.3, 0.5, 0.7, 0.9]}

grid = GridSearchCV(bg, parameters, cv=5)
grid.fit(X_train, y_train)

print("Best parameters:", grid.best_params_)
print("Best accuracy:", grid.best_score_)

import matplotlib.pyplot as plt
from sklearn.tree import plot_tree

plt.figure(figsize=(20,10))
plot_tree(bg.estimators_[0], filled=True)
plt.show()



